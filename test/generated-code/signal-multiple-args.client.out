import 'package:dbus/dbus.dart';

/// Signal data for com.example.Test.Event.
class ComExampleTestEvent extends DBusSignal {
  int get byte_value => values[0].asByte();
  bool get boolean_value => values[1].asBoolean();
  int get int16_value => values[2].asInt16();
  int get uint16_value => values[3].asUint16();
  int get int32_value => values[4].asInt32();
  int get uint32_value => values[5].asUint32();
  int get int64_value => values[6].asInt64();
  int get uint64_value => values[7].asUint64();
  double get double_value => values[8].asDouble();
  String get string_value => values[9].asString();
  String get object_path_value => values[10].asObjectPath();
  DBusSignature get signature_value => values[11].asSignature();
  DBusValue get variant_value => values[12].asVariant();
  DBusStruct get struct_value => values[13].asStruct();
  List<int> get array_value_y => values[14].asByteArray().toList();
  List<bool> get array_value_b => values[15].asArray().map((child) => child.asBoolean()).toList();
  List<int> get array_value_n => values[16].asInt16Array().toList();
  List<int> get array_value_q => values[17].asUint16Array().toList();
  List<int> get array_value_u => values[18].asInt32Array().toList();
  List<int> get array_value_n_ => values[19].asUint32Array().toList();
  List<int> get array_value_x => values[20].asInt64Array().toList();
  List<int> get array_value_t => values[21].asUint64Array().toList();
  List<double> get array_value_d => values[22].asDoubleArray().toList();
  List<String> get array_value_s => values[23].asStringArray().toList();
  List<String> get array_value_o => values[24].asObjectPathArray().toList();
  List<DBusSignature> get array_value_g => values[25].asSignatureArray().toList();
  List<DBusValue> get array_value_v => values[26].asVariantArray().toList();
  List<DBusStruct> get array_value_struct => values[27].asArray().map((child) => child.asStruct()).toList();
  List<List<String>> get array_value_array => values[28].asArray().map((child) => child.asStringArray().toList()).toList();
  Map<String, DBusValue> get dict_value_sv => values[29].asStringVariantDict();
  Map<int, String> get dict_value_us => values[30].asDict().map((key, value) => MapEntry(key.asUint32(), value.asString()));
  Map<String, Map<String, DBusValue>> get dict_value_dict => values[31].asDict().map((key, value) => MapEntry(key.asString(), value.asStringVariantDict()));

  ComExampleTestEvent(DBusSignal signal) : super(sender: signal.sender, path: signal.path, interface: signal.interface, name: signal.name, values: signal.values);
}

class ComExampleTest extends DBusRemoteObject {
  /// Stream of com.example.Test.Event signals.
  late final Stream<ComExampleTestEvent> event;

  ComExampleTest(DBusClient client, String destination, DBusObjectPath path) : super(client, name: destination, path: path) {
    event = DBusRemoteObjectSignalStream(object: this, interface: 'com.example.Test', name: 'Event', signature: DBusSignature('ybnqiuxtdsogv(si)ayabanaqaiauaxatadasaoagava(si)aasa{sv}a{us}a{sa{sv}}')).asBroadcastStream().map((signal) => ComExampleTestEvent(signal));
  }
}
